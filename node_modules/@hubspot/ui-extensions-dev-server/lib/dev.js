const { createServer } = require('vite');
const path = require('path');
const startDevServer = require('./server');
const devBuildPlugin = require('./plugins/devBuildPlugin');
const { getUrlSafeFileName } = require('./utils');
const {
  VITE_DEFAULT_PORT,
  WEBSOCKET_PORT,
  OUTPUT_DIR,
} = require('./constants');

async function _createViteDevServer(
  outputDir,
  extensionConfig,
  websocketPort,
  baseMessage,
  root
) {
  return await createServer({
    root,
    appType: 'custom',
    mode: 'development',
    server: {
      middlewareMode: true,
      hmr: {
        port: websocketPort,
      },
      watch: {
        ignored: [
          path.join(outputDir, '/**/*'),
          '**/src/app/app.functions/**/*',
        ],
      },
    },
    build: {
      rollupOptions: {
        input: extensionConfig.data.module.file,
        output: getUrlSafeFileName(extensionConfig.data.module.file),
      },
    },
    plugins: [
      devBuildPlugin({
        extensionConfig,
        outputDir,
        baseMessage,
      }),
    ],
    clearScreen: false,
  });
}

async function startDevMode({
  extensionConfig,
  functionsConfig,
  outputDir = OUTPUT_DIR,
  expressPort = VITE_DEFAULT_PORT,
  webSocketPort = WEBSOCKET_PORT,
  root = process.cwd(),
}) {
  if (!extensionConfig) {
    throw new Error('Unable to determine which extension to run');
  }

  const baseMessage = Object.freeze({
    appName: extensionConfig.data.appName,
    title: extensionConfig.data.title,
    callback: `http://hslocal.net:${expressPort}/${extensionConfig.output}`,
  });

  const viteDevServer = await _createViteDevServer(
    outputDir,
    extensionConfig,
    webSocketPort,
    baseMessage,
    root
  );

  return startDevServer({
    outputDir,
    expressPort,
    webSocketPort,
    baseMessage,
    viteDevServer,
    functionsConfig,
  });
}

module.exports = {
  startDevMode,
};
