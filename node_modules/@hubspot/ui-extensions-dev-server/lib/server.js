const express = require('express');
const cors = require('cors');
const { SERVER_CAPABILITIES } = require('./constants');
const extensionsService = require('./extensionsService');
const {
  AppFunctionExecutionService,
} = require('@hubspot/app-functions-dev-server');
const { logger } = require('@hubspot/cli-lib/logger');

function startDevServer({
  outputDir,
  expressPort,
  webSocketPort,
  baseMessage,
  viteDevServer,
  functionsConfig,
}) {
  const app = express();

  // Setup middleware
  app.use(cors());
  app.use(express.static(outputDir));

  app.use(
    '/api/crm-extensibility/execution/internal/v3',
    AppFunctionExecutionService({ ...functionsConfig, logger })
  );
  logger.info('Serving app functions locally');

  const endpointsAdded = extensionsService.add(
    app,
    webSocketPort,
    outputDir,
    baseMessage,
    SERVER_CAPABILITIES
  );

  endpointsAdded.forEach(endpoint => {
    logger.debug(`Listening at http://hslocal.net:${expressPort}${endpoint}`);
  });

  // Vite middlewares needs to go last because it's greedy and will block other middleware
  app.use(viteDevServer.middlewares);

  const server = app.listen({ port: expressPort }, () => {
    logger.debug(`Listening at ${baseMessage.callback}`);
  });

  return async function shutdown() {
    await viteDevServer.pluginContainer.close();
    // Stop new connections to express server
    server.close(() => {});
    logger.info('Extension dev server done cleaning up');
  };
}

module.exports = startDevServer;
