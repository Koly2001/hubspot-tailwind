const path = require('path');
const { EXTENSIONS_MESSAGE_VERSION } = require('./constants');
const { loadManifest } = require('./utils');

class ExtensionsService {
  constructor() {
    this.endpoint = '/extensions';
  }

  add(server, webSocketPort, outputDir, baseMessage, capabilities) {
    server.get(
      this.endpoint,
      this.generateExtensionsHandler(
        baseMessage,
        webSocketPort,
        outputDir,
        capabilities
      )
    );
    return [this.endpoint];
  }

  generateExtensionsHandler(
    baseMessage,
    webSocketPort,
    outputDir,
    capabilities = []
  ) {
    return function extensionsHandler(_req, res) {
      try {
        const output = path.parse(baseMessage.callback).name;

        const response = {
          websocket: `ws://localhost:${webSocketPort}`,
          version: EXTENSIONS_MESSAGE_VERSION,
          capabilities,
          extensions: [
            {
              ...baseMessage,
              manifest: loadManifest(outputDir, output),
            },
          ],
        };
        res.status(200).json(response);
      } catch (e) {
        res.status(500).json({
          message: 'Unable to determine which extensions are running',
        });
      }
    };
  }
}

module.exports = new ExtensionsService();
